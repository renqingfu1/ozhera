export default {
  more: 'More',
  edit: 'Edit',
  delete: 'Delete',
  create: 'Create',
  empower: 'Empower',
  filter: 'Filter',
  prompt: 'Prompt',
  remark: 'remark',
  search: 'Search',
  download: 'Download',
  delTips: 'This operation will permanently delete. Do you want to continue?',
  show: 'Show',
  hide: 'Hide',
  username: 'Username',
  isRequired: 'This field is required',
  noSaveSearch: 'Query conditions have not been bookmarked yet',
  noSaveAlias: 'Application aliases have not been bookmarked yet',
  noSaveStore: 'Store has not been bookmarked yet',
  password: 'Password',
  usernamePassword: 'username and password',
  updater: 'Updater',
  submit: 'Submit',
  serverRoom: 'serverRoom',
  logType: 'Log Type',
  setLogType: 'Select Log Type',
  appType: 'App Type',
  Attribute: ' Attribute',
  manangeNameLang: ' Management',
  indexPage: {
    title: 'Log Overview',
    btnEntry: 'Access Now',
    selTips: 'Select store / application alias',
    enterKeywords: 'Enter keywords to filter',
    selApp: 'Please select an application',
    bookmark: 'Bookmark',
    second: {
      label1: 'Trend of log lines in the last 7 days for space',
      label2: 'Trend of log lines in the last 7 days for Logtail',
      label3: 'Top 10 collection lines for all spaces',
      subLabel3: '(Last 7 days)',
      label4: 'Top 10 collection lines for all Logtails',
      subLabel4: '(Last 7 days)',
    },
    space: {
      title: 'Space List',
    },
  },
  firstCard: {
    title: 'Log Search',
    query: 'Query',
  },
  storeSelect: {
    label1: 'App Alias',
    label2: 'store Tree',
  },
  mySaved: {
    label1: 'My Saved Query Condition',
    label2: 'My Favorite App Alias',
    label3: 'My Favorite Store',
  },
  logConfig: {
    space: {
      query: 'Query',
      add: 'Add',
      table: {
        spaceName: 'Space Name',
        creator: 'Creator',
        ctime: 'Creation Time',
        utime: 'Update Time',
        desc: 'Description',
        operation: 'Operation',
        op1: 'Authorization',
        edit: 'Edit',
        del: 'Delete',
      },
    },
  },
  resourceManage: {
    title: 'Resource Management',
    name: ' Resource',
    region: 'Region',
    mqAdd: 'MQ Address',
    EsClusterName: 'ES cluster name',
    MQDomainName: 'MQ domain name',
    esApiAdd: 'esApi Address',
    enterTeamId: 'Please enter the team ID',
    addTips: 'Note: The system will automatically add some tags, and these default tags cannot be deleted',
    seperateIndex: 'If you have multiple tags in the list, please separate them with line breaks',
    connectionType: 'Connection Type',
    tagList: 'Tag List',
    esIndexGroup: 'ES index group',
    indexTabItem: {
      add: 'Add',
      tip: 'Index Configuration Explanation>>',
      table: {
        alias: 'Alias',
        clusterName: 'MQ Address',
        serviceUrl: 'Domain Name',
        regionCn: 'Type',
        ak: 'Username',
        teamId: 'Team ID',
        orgId: 'User Group ID',
        ops: 'Operation',
        edit: 'Edit',
        del: 'Delete',
        detail: 'Details',
      },
    },
  },
  tree: {
    title: 'Namespace:',
    select: 'placeholder',
  },
  treeComponent: {
    title: 'Logstore List',
  },
  userMenu: {
    日志概览: 'Overview',
    日志管理: 'Log',
    资源管理: 'Resource',
  },
  noData: 'No data available',
  pleaseEnter: {
    base: 'Please enter',
  },
  confirm: 'Confirm',
  cancle: 'Cancle',
  logQuery: {
    analyze: 'Analyze',
    collect: 'Collect',
    logTailManage: 'Logtail management',
    topMsg: 'If the start time is 5 days ago, the interval between start and end time should be within 1 hour!',
    selAppAlias: 'Select a service application alias',
    filerFiled: 'Field Display Filtering',
    charts: ' Charts',
    totalNums: 'Total Number of Logs: ',
    time: 'Time',
    document: 'Document',
    viewContext: 'View Context',
    loadmoreUp: 'Load More',
    loadmoreDown: 'Load More',
    table: 'Table',
    field: 'Field',
    value: 'Value',
    allData: 'All data has been retrieved',
    loading: 'Loading',
    createAlarm: 'Create Alarm',
    viewMonitoring: 'View Monitoring',
    CopyLogtail: 'Copy Logtail',
    DelLogtail: 'Delete Logtail',
  },
  fastAccess: { // 快速接入
    selectSpace: 'Select log space',
    configLogtail: 'Logtail configuration',
    finished: 'Finished',
    logAccess: 'Log access',
    noText: 'No ',
    createImmediate: 'Create immediately',
    spaceDes: '"Space" in log services refers to a resource management unit used for resource isolation and control. It is recommended that one department (third-level) shares one Space.',
    storeDes: 'Logstore" (Log Store) is a unit within a logging service that is used for collecting, storing, and querying log data. Depending on your specific requirements, you can create multiple Logstores within a target Space. This is typically done to create separate Logstores for different types of logs within the same application',
    preStep: 'Previous Step',
    nextStep: 'Next Step',
    spaceDesLabel: 'Space Description',
    TenantID: 'Tenant ID',
    storageLifecycle: 'Storage Lifecycle',
    storageShardCount: 'Storage Shard Count',
  },
  tempPage: {
    inputTem: 'Please Enter Template Name',
    inputTemJson: 'Please Enter Template JSON',
    inputPlatform: 'Select Platform',
    inputLang: 'Select Language',
    inputAppType: 'Select Application Type',
    inputTemId: 'Please Enter Template ID List',
  },
  commonDatePicker: {
    last15m: '15 min',
    last30m: '30 min',
    last1h: '1 hr',
    last2h: '2 hrs',
    last4h: '4 Hrs',
    last8h: '8 Hrs',
    last12h: '12 Hrs',
    last1d: '1 day',
    last2d: '2 days',
    last3d: '3 days',
    last5d: '5 days',
    last7d: '7 days',
    today: 'Today',
    yesterday: 'Yesterday',
  },
  createTail: {
    deployMethod: 'Deploy Method',
    ServiceAppName: 'Service AppName',
    ServiceAlias: 'Service Alias',
    SelServiceAlias: 'Please select a service alias',
    EnvGrouping: 'Env Grouping',
    enterEnvGroup: 'Enter Env Grouping',
    serviceIP: 'Service IP',
    enterServiceIP: 'Enter Service IP',
    SelAll: 'Select All',
    LogFilePath: 'Log File Path',
    SpecificToFilename: 'FileSpecific',
    DelimiterExpression: 'Delimiter Expression',
    LineStartRegex: 'Line Start Regex',
    ParsingType: 'Parsing Type',
    selParsingType: 'Select Parsing Type',
    ParsingScript: 'Parsing Script',
    CollectionRate: 'Collection Rate',
    selectP: 'Select {name}',
    MQConfig: 'MQ Config',
    BatchQuantity: 'Batch Quantity',
    LogExample: 'Log Example',
    IndexColumn: 'Index Column',
    AddIndexColumn: 'Add Index Column',
    IndexNumber: 'Index',
    ExampleValue: 'Sample',
    enterLog: 'Please enter log content',
    ViewParsingResults: 'View Parsing Results',
    TestConfiguration: 'Test Configuration',
  },
};
